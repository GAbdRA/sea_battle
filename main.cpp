#include "D:\Pictures\SeaBATTLE\Menu\Menu.h"

int main() //Функция из которой буду вызываться другие и осуществляться инициализация переменых и расстановка корабликов
{
	setlocale(LC_ALL, "Russian"); //Делаем возможным вывод в консоль на русском языке
	srand(time(NULL)); //онулирование рандомного значения
	char variant[2][30] = { "АВТОМАТИЧЕСКАЯ РАССТАНОВКА","РУЧНАЯ РАССТАНОВКА" };
	int ship_pos[12][24] = { 0 }; //двумерный массив благодоря которому можно будет отслеживать:
	int enemy_ship_pos[12][24] = { 0 }; //двумерный массив благодоря которому можно будет отслеживать:
	/*
	0 - свободныем места (куда можно ставить)
	1 - позиции возле корабликов (куда нельзя ставить)
	2 - место куда попал снаряд но где ничего не было
	3 - место где был снаряд и находился кораблик
	4 - 1-о палубный кораблик (1-ый)
	5 - 1-о палубный кораблик (2-ой)
	6 - 1-о палубный кораблик (3-ий)
	7 - 1-о палубный кораблик (4-ый)
	8 - 2-х палубный кораблик (1-ый)
	9 - 2-х палубный кораблик (2-ой)
	10 - 2-х палубный кораблик (3-ий)
	11 - 3-х палубный кораблик (1-ый)
	12 - 3-х палубный кораблик (2-ой)
	13 - 4-х палубный кораблик (первый и единственный)
	*/
	Ships* characteristic = new Ships[20]; //создаём 10-ть корабликов характеристики которых описаны в структуре
	LoadCharactShips(characteristic); //загрука характеристик корабликов (изначальное положение и количество палуб)
	int key = 1, y = 2, x = 2, num = 0, change = 1, A = 0, up = 0, down = 0, over = 0;
	bool manual_placement = true, your_turn = 0, start = false; //переменные для:

	Avake(); //Вывыдим надпись "МОРСКОЙ БОЙ" на экран
	Sleep(1500); //ждём 1.5 секунды
	setColor(White, Black); //Устанавливаем цвет текста (белый на голубом)
	system("cls"); //очищяем консоль
	CreatField(1, 0, 9); //создаём игровое поле
	Paint(variant, change);
	do //запускаем цикл
	{
		key = _getch(); //получаем номер нажатой клавиши
		switch (key) //запускаем свитч
		{
		case Up: //если нажали "Стрелочка вверх"
			if (y > 0) //если "y" больше 0
			{
				y--; //вычитаем из значение по "y" 1
				change = y; //выбранный пункт
				Paint(variant, change); //вывод пунктов на экран
			}
			break;
		case Down: //если нажали "Стрелочка вниз"
			if (y < 1) //если "y" меньше 1
			{
				y++; //прибавляем к значению по "y" 1
				change = y; //выбранный пункт
				Paint(variant, change); //вывод пунктов на экран
			}
			break;
		case Enter:
			do
			{
				switch (change)
				{
				case 0: // ксли 0
					manual_placement = false; //автоматическая расстанвкоа
					A++; //чтобы заврешить цикл
					break;
				case 1:
					manual_placement = true; //ручная расстановка
					A++; //чтобы заврешить цикл
					y++; //прибавляем к значению по "y" 1
					break;
				}
			} while (key != Enter);
		}
	} while (A < 1);
	system("cls"); //очищяем консоль
	CreatField(0, 0, 9); //создаём игровое поле
	x = 2, y = 2;
	if (manual_placement == false) //если выбрана автоматическая расстановка
	{
		auto_arrangement(characteristic, ship_pos, 0); //передаём необходимые значения для того что автоматически расставить кораблки
		PaintPos(ship_pos, 2, 0); //перерисовываем игровую локации с учетём внесенных изменений (поставили кораблик
		start = true; //начинаем игру
	}
	else if (manual_placement == true && num < 10) //ручная расстановка
	{
		setShips(x,y,key,num,ship_pos,characteristic,start);
	}
	Sleep(20);
	CreatField(1, 35, 4); //создаём игровое поле
	auto_arrangement(characteristic, enemy_ship_pos, 10); //автоматическая расстанвока для вражеских корабликов
	PaintPos(enemy_ship_pos, 37, 15); //отрисовка вражеских кораблей/поля

    int xx = 37, yy = 2;
    do
	{
		if (your_turn == true) //если моя очередь атаковать
		{
			do //запускаем цикл в котором при нажатии на ту или иную клавишу будеи делать то или иное дейстивие
			{
				x = xx, y = yy; //переменная которая будет запоминать где находился курсор
				PaintPos(enemy_ship_pos, 37, 15); //перерисовываем игровую локации с учетём внесенных изменений (поставили кораблик)
				setColor(DarkGray, DarkGray); //устанавливаем черный цвет так как таким цветом будет выводиться кораблик
				SetCursor(x, y); //ставим курсор на позицию изменяемых ниже переменных (X, Y)
				cout << "++"; //2 "+" так как одна клеточка в ширину в игре равна 2-ум клеточкам в ширину в консоли
				key = _getch();//функция возвращает номер нажатой клавиши
				switch (key) //Выполняем различные функции в соответствии с нажатой клавишью
				{
				case Left: //если нажали "Стрелочка влево"
					if (x > 38) //позиция до которой разрешено перемещение в лево
					{
						x -= 2; //меняем значение по Х на -2 так как одна клеточка в игре равна двум в консоли
						xx = x; //запоминаем положение курсора
					}
					break;
				case Right: //если нажали "Стрелочка вправо"
					if (x < 55) // проверяем не достиг ли он позиции до которой ему можно передвигаться(чтобы он не вышел за границы поля)
					{
						x += 2; //меняем значение переменной Х на +2 так как одна клеточка в игре равна двум в консоли
						xx = x; //запоминаем положение курсора
					}
					break; //закрыли этот кейс
				case Up: //если нажали "Стрелочка вверх"
					if (y > 2) //позиция до которой разрешено перемещение вверх
					{
						y--;  //меняем значение по Y на -1
						yy = y; //запоминаем положение курсора
					}
					break; //закрыли этот кейс
				case Down: //если нажали "Стрелочка вних"
					if (y < 11) //позиция до которой разрешено перемещение вниз
					{
						y++;  //меняем значение по Y на +1
						yy = y; //запоминаем положение курсора
					}
					break;
				case Enter:
					if (enemy_ship_pos[y - 1][x - 35] >= 4) //проверяем позицию по которой мы выстрельнули на наличие корабликов
					{
						for (size_t i = 0; i < 2; i++) //если это так то мызаменяем в клеточке номерок кораблика на "3"
						{
							enemy_ship_pos[y - 1][x - 35 + i] = 3; // изменяем значение
							explosion(characteristic, enemy_ship_pos, 10, over); //проверяем на уничтожение
						}
						Meny(9); //вывод реплики на экран
						Sleep(500); //небольшая пауза
					}
					else if (enemy_ship_pos[y - 1][x - 35] < 2) //Если на позиции по которой был произведён огонь ничего нету
					{
						for (size_t i = 0; i < 2; i++) //если это так то мызаменяем в клеточке номерок кораблика на "2"
						{
							enemy_ship_pos[y - 1][x - 35 + i] = 2; // изменяем значение
						}
						Sleep(500); //небольшая пауза
						Meny(5); //вывод реплики на экран
						your_turn = false; //очередь атаки противника
					}
					break;
				}
			} while (key != Enter); //выполнять код который демонстрируется в цикл до тех пор пока не нажата клавиша "Enter"
		}
		if (your_turn == false) //если ход противника
		{
			Sleep(0 + rand() % 400); //небольшая пауза
			Meny(0); //вывод реплики на экран
			PaintPos(ship_pos, 2, 0); //перерисовываем наше поле
			Sleep(0 + rand() % 400); //небольшая пауза
			x = (2 + rand() % 10) * 2, y = 2 + rand() % 10; //случайным образом выдаём кооординату по котороой будет происходить атака
			if (ship_pos[y - 1][x - 1] >= 4) //проверяем позицию по которой мы выстрельнули на наличие корабликов
			{
				for (size_t i = 0; i < 2; i++) //если это так то мызаменяем в клеточке номерок кораблика на "3"
				{
					ship_pos[y - 1][x - 2 + i] = 3;  // изменяем значение
					explosion(characteristic, ship_pos, 0, over); //проверяем на уничтожение
				}
				Meny(2); //вывод реплики на экран
				Sleep(0 + rand() % 750); //небольшая пауза
			}
			else if (ship_pos[y - 1][x - 1] <= 2) //Если на позиции по которой был произведён огонь ничего нету
			{
				for (size_t i = 0; i < 2; i++) //если это так то мызаменяем в клеточке номерок кораблика на "2"
				{
					ship_pos[y - 1][x - 2 + i] = 2; //изменяем значение
				}
				Meny(1); //вывод реплики на экран
				Sleep(0 + rand() % 750); //небольшая пауза
				your_turn = true; //моя очередь атаки
			}
		}
	} while (over == 0);

	PaintPos(ship_pos, 2, 0);
	PaintPos(enemy_ship_pos, 37, 15); //перерисовываем игровую локации с учетём внесенных изменений (поставили кораблик)
	if (over == 2) //
	{
		Meny(7);
	}
	else
	{
		Meny(3);
	}
	Sleep(500000);
}
